% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roverlaps.R
\name{roverlaps}
\alias{roverlaps}
\title{Fast overlaps of \code{data.table} or \code{GRanges}}
\usage{
roverlaps(query, subject, verbose = FALSE, index_only = FALSE)
}
\arguments{
\item{query}{Query ranges as a \code{data.table} with mandatory fields \code{seqnames} and \code{start}}

\item{subject}{Subject ranges as a \code{data.table} with mandatory fields \code{seqnames} and \code{start}}

\item{verbose}{Increase the verbosity \code{[FALSE]}}

\item{index_only}{Return only the indicies ('query.id' and 'subject.id') \code{[FALSE]}}
}
\value{
data.table ('seqnames', 'start', 'end', 'query.id', 'subject.id') of overlaps
}
\description{
Performs interval overlaps between two genomic ranges, returning the
intersecting set of ranges and the indicies of the query and subject
which created the interval.
}
\note{
Positions in ranges are inclusive. Example: chr1:2-5 (query) and
chr1:5-7 (subject) will create an overlap with value chr1:5-5.
}
\examples{

library(data.table)
set.seed(42)
C=10000
sn1 <- factor(c(1:22, "X")[sample(seq(23),C, replace=TRUE)])
s1  <- sample(seq(100000), C, replace=TRUE)
o1 <- data.table(seqnames=sn1, start=s1)
o1[, end := start + 100]
sn2 <- factor(c(1:22, "X")[sample(seq(23),C, replace=TRUE)])
s2  <- sample(seq(100000), C, replace=TRUE)
o2 <- data.table(seqnames=sn2, start=s2)
o2[, end := start + 100]
o <- roverlaps(o1,o2)

## output
# seqnames start   end query.id subject.id
#        7 83405 83451        3       3315
#        7 83405 83463        3       3148
#        7 83485 83505        3       1022

oi <- roverlaps(o1, o2, index_only=TRUE)

## output
#    query.id subject.id
#           3       3315
#           3       3148
#           3       1022
}
